<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>
		<!-- 늦은 로딩을 사용할지에 대한 여부. 사용하지 않는다면 모두 즉시 로딩할 것이다.
		이 값은 fetchType 속성을 사용해서 대체할 수 있다. (true,false : false) -->
		<setting name="lazyLoadingEnabled" value="true"/>

		<!--  활성화 상태로 두게 되면 늦은(lazy) 로딩 프로퍼티를 가진 객체는 호출에 따라 로드될 것이다.
		반면에 개별 프로퍼티는 요청할때 로드된다. (true,false : true) -->
		<setting name="aggressiveLazyLoading" value="true"/>

		<!-- 한개의 구문에서 여러개의 ResultSet 을 허용할지의 여부(드라이버가 해당 기능을 지원해야 함)
		(true,false : true) -->
		<setting name="multipleResultSetsEnabled" value="true"/>

		<!-- 칼럼명 대신에 칼럼라벨을 사용. 드라이버마다 조금 다르게 작동한다.
		문서와 간단한 테스트를 통해 실제 기대하는 것처럼 작동하는지 확인해야 한다.(true,false : true) -->
		<setting name="useColumnLabel" value="true"/>

		<!-- 생성키에 대한 JDBC 지원을 허용. 지원하는 드라이버가 필요하다. true 로 설정하면 생성키를 강제로 생성한다.
		일부 드라이버(예를들면, Derby)에서는 이 설정을 무시한다. (true,false : false) -->
		<setting name="useGeneratedKeys" value="false"/>

		<!-- MyBatis 가 칼럼을 필드/프로퍼티에 자동으로 매핑할지와 방법에 대해 명시.
		PARTIAL 은 간단한 자동매핑만 할뿐, 내포된 결과에 대해서는 처리하지 않는다.
		FULL 은 처리가능한 모든 자동매핑을 처리한다. (NONE,PARTIAL,FULL : PARTIAL) -->
		<setting name="autoMappingBehavior" value="PARTIAL"/>

		<!-- 디폴트 실행자(executor) 설정. SIMPLE 실행자는 특별히 하는 것이 없다.
		REUSE 실행자는 PreparedStatement 를 재사용한다.
		BATCH 실행자는 구문을 재사용하고 수정을 배치처리한다. (SIMPLE,REUSE,BATCH : SIMPLE) -->
		<setting name="defaultExecutorType" value="SIMPLE"/>
		<!-- 중첩구문내 RowBound 사용을 허용 (true,false : false) -->
		<setting name="safeRowBoundsEnabled" value="false"/>

		<!-- 전통적인 데이터베이스 칼럼명 형태인 A_COLUMN을 CamelCase형태의
		자바 프로퍼티명 형태인 aColumn으로 자동으로 매핑하도록 함 (true,false : false) -->
		<setting name="mapUnderscoreToCamelCase" value="true"/>

		<!-- JDBC타입을 파라미터에 제공하지 않을때 null값을 처리한 JDBC타입을 명시한다.
		일부 드라이버는 칼럼의 JDBC타입을 정의하도록 요구하지만 대부분은 NULL, VARCHAR 나
		OTHER 처럼 일반적인 값을 사용해서 동작한다. (NULL,VARCHAR,OTHER : OTHER)-->
		<setting name="jdbcTypeForNull" value="VARCHAR"/>

	</settings>
</configuration>