<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.UserMapper">
	<select id="getUser" parameterType="com.example.demo.vo.UserSearchVO" resultType="com.example.demo.vo.UserVO">
		select	*
		from	user
		<where>
			<if test="name != null">
				and name like CONCAT(#{name}, '%')
			</if>
			<if test="email != null">
				and email like CONCAT(#{email}, '%')
			</if>
			<if test="password != null">
				and password like CONCAT(#{password}, '%')
			</if>
			<if test="followersCmd != null">
				and followers ${followersCmd} #{followers}
			</if>
			<if test="followingCmd != null">
				and following ${followingCmd} #{following}
			</if>
			<if test="birthdayCmd != null">
				and birthday ${birthdayCmd} #{birthday}
			</if>
			<if test= "interestsList != null and interestsList.size != 0">
				and	interests in (
					<foreach collection="interestsList" item="item" separator=",">
						#{item}
					</foreach>
				)
			</if>
			<if test="verifiedCmd != null">
				and verified = #{verified}
			</if>
		</where>
	</select>

	<insert id="inserts" parameterType="com.example.demo.vo.UserVO">
	        insert into user(name, email, password, followers, following, birthday, interests, verified)
	        values
	        <foreach collection="list" item="item" separator=" , ">
	            (#{item.name}, #{item.email}, #{item.password}, #{item.followers}, #{item.following}, #{item.birthday}, #{item.interests}, #{item.verified})
	        </foreach>
	 </insert>
	 
	 <delete id="delete" parameterType="com.example.demo.vo.UserVO">
	 	delete from user
	 	where user_key = #{userKey}
	 </delete>
	 
	 <update id="update">
	 	update user
	 	<set>
	 		<if test="name != null">
				name = #{name},
			</if>
			<if test="email != null">
				email = #{email},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="followers >= 0">
				followers = #{followers},
			</if>
			<if test="following >= 0">
				following = #{following},
			</if>
			<if test="birthday != null">
				birthday = #{birthday},
			</if>			
			<if test="interests != null">
				interests = #{interests},
			</if>
			<if test="verified != null">
				verified = #{verified},
			</if>
		</set>
	 	where user_key = #{userKey}
	 </update>
	 
	 <insert id="insert" parameterType="com.example.demo.vo.UserVO">
	        insert into user(name, email, password, followers, following, birthday, interests, verified)
	        values (#{name}, #{email}, #{password}, #{followers}, #{following}, #{birthday}, #{interests}, #{verified})
	 </insert>
</mapper>